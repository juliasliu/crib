{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/julialiu/Development/Julia Workspace/crib/crib-app/navigation/BottomTabNavigator.tsx\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ChoresScreen from '../screens/ChoresScreen';\nimport FridgeScreen from '../screens/Fridge/FridgeScreen';\nimport InventoryAddScreen from '../screens/Fridge/InventoryAddScreen';\nimport ListAddScreen from '../screens/Fridge/ListAddScreen';\nimport HomeScreen from '../screens/Home/HomeScreen';\nimport TasksScreen from '../screens/Home/TasksScreen';\nimport FinancesScreen from '../screens/FinancesScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport SignInScreen from '../screens/SignInScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport HomeButton from '../components/HomeButton';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar BottomTab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Chores\",\n    tabBarOptions: {\n      activeTintColor: Colors[colorScheme].tint\n    },\n    tabBar: function tabBar(props) {\n      return React.createElement(MyTabBar, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Chores\",\n    component: ChoresNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Fridge\",\n    component: FridgeNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Finances\",\n    component: FinancesNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MyTabBar(_ref) {\n  var _this2 = this;\n\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var icon = route.name == \"Chores\" ? \"ios-hand\" : route.name == \"Fridge\" ? \"ios-restaurant\" : route.name == \"Home\" ? \"ios-home\" : route.name == \"Finances\" ? \"ios-cash\" : route.name == \"Profile\" ? \"ios-person\" : null;\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityState: isFocused ? {\n        selected: true\n      } : {},\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1,\n        justifyContent: 'center'\n      },\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, route.name == \"Home\" ? React.createElement(HomeButton, {\n      navigation: navigation,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 36\n      }\n    }) : React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: 10\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, React.createElement(TabBarIcon, {\n      name: icon,\n      color: isFocused ? Colors.green : Colors.gray,\n      size: 30,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })));\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 30\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar ChoresStack = createStackNavigator();\n\nfunction ChoresNavigator() {\n  return React.createElement(ChoresStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, React.createElement(ChoresStack.Screen, {\n    name: \"ChoresScreen\",\n    component: ChoresScreen,\n    options: {\n      headerTitle: ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), React.createElement(ChoresStack.Screen, {\n    name: \"SignInScreen\",\n    component: SignInScreen,\n    options: {\n      headerTitle: 'Sign In'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(ChoresStack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      headerTitle: 'Register'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar FridgeStack = createStackNavigator();\n\nfunction FridgeNavigator() {\n  return React.createElement(FridgeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, React.createElement(FridgeStack.Screen, {\n    name: \"FridgeScreen\",\n    component: FridgeScreen,\n    options: {\n      headerTitle: 'Fridge'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), React.createElement(FridgeStack.Screen, {\n    name: \"InventoryAddScreen\",\n    component: InventoryAddScreen,\n    options: {\n      headerTitle: 'Fridge'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), React.createElement(FridgeStack.Screen, {\n    name: \"ListAddScreen\",\n    component: ListAddScreen,\n    options: {\n      headerTitle: 'Fridge'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator() {\n  var _this3 = this;\n\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTitle: 'Home',\n      headerRight: function headerRight() {\n        return React.createElement(Ionicons, {\n          size: 30,\n          onPress: function onPress() {\n            return alert('Take a picture!!');\n          },\n          name: \"ios-camera\",\n          color: Colors.darkGray,\n          style: {\n            paddingHorizontal: 20\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"TasksScreen\",\n    component: TasksScreen,\n    options: {\n      headerTitle: 'Tasks'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"ChatScreen\",\n    component: TasksScreen,\n    options: {\n      headerTitle: 'Chat'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      title: 'Profile',\n      headerStyle: {\n        backgroundColor: Colors.green,\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar FinancesStack = createStackNavigator();\n\nfunction FinancesNavigator() {\n  return React.createElement(FinancesStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, React.createElement(FinancesStack.Screen, {\n    name: \"FinancesScreen\",\n    component: FinancesScreen,\n    options: {\n      headerTitle: 'Finances'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator() {\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      title: 'Profile',\n      headerStyle: {\n        backgroundColor: Colors.green,\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/julialiu/Development/Julia Workspace/crib/crib-app/navigation/BottomTabNavigator.tsx"],"names":["Ionicons","createBottomTabNavigator","createStackNavigator","React","Colors","useColorScheme","ChoresScreen","FridgeScreen","InventoryAddScreen","ListAddScreen","HomeScreen","TasksScreen","FinancesScreen","ProfileScreen","SignInScreen","RegisterScreen","HomeButton","BottomTab","BottomTabNavigator","colorScheme","activeTintColor","tint","props","ChoresNavigator","FridgeNavigator","HomeNavigator","FinancesNavigator","ProfileNavigator","MyTabBar","state","descriptors","navigation","focusedOptions","routes","index","key","options","tabBarVisible","flexDirection","map","route","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","icon","selected","tabBarAccessibilityLabel","tabBarTestID","flex","justifyContent","alignItems","padding","green","gray","TabBarIcon","ChoresStack","headerTitle","FridgeStack","HomeStack","headerRight","alert","darkGray","paddingHorizontal","headerStyle","backgroundColor","elevation","shadowOpacity","borderBottomWidth","headerTintColor","headerTitleStyle","fontWeight","FinancesStack","ProfileStack"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ChoresScreen from '../screens/ChoresScreen';\n\nimport FridgeScreen from '../screens/Fridge/FridgeScreen';\nimport InventoryAddScreen from '../screens/Fridge/InventoryAddScreen';\nimport ListAddScreen from '../screens/Fridge/ListAddScreen';\n\nimport HomeScreen from '../screens/Home/HomeScreen';\nimport TasksScreen from '../screens/Home/TasksScreen';\n\nimport FinancesScreen from '../screens/FinancesScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\n\nimport SignInScreen from '../screens/SignInScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\n\nimport { BottomTabParamList, ChoresParamList, FridgeParamList } from '../types';\n\nimport HomeButton from '../components/HomeButton';\n\nimport {\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n} from 'react-native';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Chores\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}\n      tabBar={props => <MyTabBar {...props} />}>\n      <BottomTab.Screen\n        name=\"Chores\"\n        component={ChoresNavigator}\n      />\n      <BottomTab.Screen\n        name=\"Fridge\"\n        component={FridgeNavigator}\n      />\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeNavigator}\n      />\n      <BottomTab.Screen\n        name=\"Finances\"\n        component={FinancesNavigator}\n      />\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={ProfileNavigator}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  if (focusedOptions.tabBarVisible === false) {\n    return null;\n  }\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: 'tabPress',\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: route.key,\n          });\n        };\n\n        const icon =\n          route.name == \"Chores\" ? \"ios-hand\" :\n          route.name == \"Fridge\" ? \"ios-restaurant\" :\n          route.name == \"Home\" ? \"ios-home\" :\n          route.name == \"Finances\" ? \"ios-cash\" :\n          route.name == \"Profile\" ? \"ios-person\" : null;\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityState={isFocused ? { selected: true } : {}}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{ flex: 1, justifyContent: 'center' }}\n            key={index}\n          >\n          {\n            route.name == \"Home\" ? <HomeButton navigation={navigation} /> :\n            (\n              <View style={{ flexDirection: 'column', alignItems: 'center', padding: 10, }}>\n                <TabBarIcon name={icon} color={isFocused ? Colors.green : Colors.gray } size={30} />\n              </View>\n            )\n          }\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: string; color: string }) {\n  return <Ionicons size={30} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst ChoresStack = createStackNavigator<ChoresParamList>();\n\nfunction ChoresNavigator() {\n  return (\n    <ChoresStack.Navigator>\n      <ChoresStack.Screen\n        name=\"ChoresScreen\"\n        component={ChoresScreen}\n        options={{ headerTitle: '' }}\n      />\n      <ChoresStack.Screen\n        name=\"SignInScreen\"\n        component={SignInScreen}\n        options={{ headerTitle: 'Sign In'}}/>\n      <ChoresStack.Screen\n        name=\"RegisterScreen\"\n        component={RegisterScreen}\n        options={{ headerTitle: 'Register'}}/>\n    </ChoresStack.Navigator>\n  );\n}\n\nconst FridgeStack = createStackNavigator<FridgeParamList>();\n\nfunction FridgeNavigator() {\n  return (\n    <FridgeStack.Navigator>\n      <FridgeStack.Screen\n        name=\"FridgeScreen\"\n        component={FridgeScreen}\n        options={{ headerTitle: 'Fridge' }}\n      />\n      <FridgeStack.Screen\n        name=\"InventoryAddScreen\"\n        component={InventoryAddScreen}\n        options={{ headerTitle: 'Fridge' }}\n      />\n      <FridgeStack.Screen\n        name=\"ListAddScreen\"\n        component={ListAddScreen}\n        options={{ headerTitle: 'Fridge' }}\n      />\n    </FridgeStack.Navigator>\n  );\n}\n\nconst HomeStack = createStackNavigator<HomeParamList>();\n\nfunction HomeNavigator() {\n  return (\n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          headerTitle: 'Home',\n          headerRight: () => (\n            <Ionicons\n              size={30}\n              onPress={() => alert('Take a picture!!')}\n              name=\"ios-camera\"\n              color={Colors.darkGray}\n              style={{paddingHorizontal: 20}}\n            />\n          ),\n        }}\n      />\n      <HomeStack.Screen\n        name=\"TasksScreen\"\n        component={TasksScreen}\n        options={{ headerTitle: 'Tasks' }}\n      />\n      <HomeStack.Screen\n        name=\"ChatScreen\"\n        component={TasksScreen}\n        options={{ headerTitle: 'Chat' }}\n      />\n      <HomeStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          title: 'Profile',\n           headerStyle: {\n             backgroundColor: Colors.green,\n             elevation: 0,\n             shadowOpacity: 0,\n             borderBottomWidth: 0,\n           },\n           headerTintColor: '#fff',\n           headerTitleStyle: {\n             fontWeight: 'bold',\n           },\n       }}\n      />\n    </HomeStack.Navigator>\n  );\n}\n\nconst FinancesStack = createStackNavigator<FinancesParamList>();\n\nfunction FinancesNavigator() {\n  return (\n    <FinancesStack.Navigator>\n      <FinancesStack.Screen\n        name=\"FinancesScreen\"\n        component={FinancesScreen}\n        options={{ headerTitle: 'Finances' }}\n      />\n    </FinancesStack.Navigator>\n  );\n}\n\nconst ProfileStack = createStackNavigator<ProfileParamList>();\n\nfunction ProfileNavigator() {\n  return (\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          title: 'Profile',\n           headerStyle: {\n             backgroundColor: Colors.green,\n             elevation: 0,\n             shadowOpacity: 0,\n             borderBottomWidth: 0,\n           },\n           headerTintColor: '#fff',\n           headerTitleStyle: {\n             fontWeight: 'bold',\n           },\n       }}\n      />\n    </ProfileStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}