{"ast":null,"code":"var _jsxFileName = \"/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/StyledInput.tsx\";\nimport * as React from 'react';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Colors from '../constants/Colors';\nexport default function StyledInput(_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      icon = _ref.icon,\n      placeholder = _ref.placeholder,\n      description = _ref.description,\n      size = _ref.size,\n      style = _ref.style,\n      editable = _ref.editable;\n\n  var handleText = function handleText() {};\n\n  var handleEmail = function handleEmail() {};\n\n  var handlePassword = function handlePassword() {};\n\n  return React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, label), React.createElement(View, {\n    style: styles.inputIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, icon && React.createElement(Icon, {\n    style: styles.inputIcon,\n    name: icon,\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }), type === \"text\" ? React.createElement(TextInput, {\n    style: [styles.input, style, !editable && {\n      color: Colors.darkGray\n    }],\n    underlineColorAndroid: \"transparent\",\n    value: value,\n    placeholder: placeholder,\n    autoCapitalize: \"none\",\n    onFocus: handleText,\n    onChangeText: handleText,\n    editable: editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : type === \"email\" ? React.createElement(TextInput, {\n    style: [styles.input, style, !editable && {\n      color: Colors.darkGray\n    }],\n    underlineColorAndroid: \"transparent\",\n    value: value,\n    placeholder: placeholder,\n    autoCapitalize: \"none\",\n    onChangeText: handleEmail,\n    editable: editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }) : type === \"password\" ? React.createElement(TextInput, {\n    style: [styles.input, style, !editable && {\n      color: Colors.darkGray\n    }],\n    underlineColorAndroid: \"transparent\",\n    value: value,\n    placeholder: placeholder,\n    autoCapitalize: \"none\",\n    onChangeText: handlePassword,\n    editable: editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }) : null), React.createElement(Text, {\n    style: styles.inputDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, description));\n}\nvar styles = StyleSheet.create({\n  inputContainer: {\n    marginVertical: 10\n  },\n  inputLabel: {\n    color: Colors.green,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  inputIconContainer: {\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: Colors.lightGray,\n    borderBottomWidth: 2\n  },\n  inputIcon: {\n    marginRight: 10,\n    color: Colors.gray,\n    borderColor: Colors.lightGray,\n    borderBottomWidth: 2\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16\n  },\n  inputDescription: {\n    color: Colors.gray,\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/StyledInput.tsx"],"names":["React","Icon","Colors","StyledInput","type","label","value","icon","placeholder","description","size","style","editable","handleText","handleEmail","handlePassword","styles","inputContainer","inputLabel","inputIconContainer","inputIcon","input","color","darkGray","inputDescription","StyleSheet","create","marginVertical","green","fontSize","fontWeight","marginTop","flexDirection","alignItems","borderColor","lightGray","borderBottomWidth","marginRight","gray","flex","height","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n  FlatList,\n  Image,\n  ImageBackground,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Button,\n  TouchableOpacity,\n  Modal,\n} from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport default function StyledInput({ type, label, value, icon, placeholder, description, size, style, editable }) {\n\n  const handleText = () => {\n\n  }\n  const handleEmail = () => {\n\n  }\n  const handlePassword = () => {\n\n  }\n\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={styles.inputLabel}>\n        {label}\n      </Text>\n      <View style={styles.inputIconContainer}>\n        {\n          icon && <Icon style={styles.inputIcon} name={icon} size={20} />\n        }\n        {\n          type === \"text\" ? (\n            <TextInput style = {[styles.input, style, !editable && { color: Colors.darkGray }]}\n               underlineColorAndroid = \"transparent\"\n               value = {value}\n               placeholder = {placeholder}\n               autoCapitalize = \"none\"\n               onFocus = {handleText}\n               onChangeText = {handleText}\n               editable={editable}/>\n          ) : type === \"email\" ? (\n            <TextInput style = {[styles.input, style, !editable && { color: Colors.darkGray }]}\n               underlineColorAndroid = \"transparent\"\n               value = {value}\n               placeholder = {placeholder}\n               autoCapitalize = \"none\"\n               onChangeText = {handleEmail}\n               editable={editable}/>\n          ) : type === \"password\" ? (\n            <TextInput style = {[styles.input, style, !editable && { color: Colors.darkGray } ]}\n               underlineColorAndroid = \"transparent\"\n               value = {value}\n               placeholder = {placeholder}\n               autoCapitalize = \"none\"\n               onChangeText = {handlePassword}\n               editable={editable}/>\n          ) : null\n        }\n      </View>\n      <Text style={styles.inputDescription}>\n        {description}\n      </Text>\n   </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  // ...\n  inputContainer: {\n    marginVertical: 10,\n  },\n  inputLabel: {\n    color: Colors.green,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  inputIconContainer: {\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: Colors.lightGray,\n    borderBottomWidth: 2,\n  },\n  inputIcon: {\n    marginRight: 10,\n    color: Colors.gray,\n    borderColor: Colors.lightGray,\n    borderBottomWidth: 2,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    fontSize: 16,\n  },\n  inputDescription: {\n    color: Colors.gray,\n    paddingTop: 5,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}