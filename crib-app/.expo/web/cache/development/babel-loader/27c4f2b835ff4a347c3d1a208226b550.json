{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/julialiu/Development/Julia Workspace/crib/crib-app/screens/RegisterScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, View } from '../components/Themed';\nimport styles from '../styles/landing';\nimport { TextInput } from 'react-native-gesture-handler';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      houseCode: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \"Register\"), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Name\",\n        placeholderTextColor: \"#white\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#white\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Pasword\",\n        placeholderTextColor: \"#white\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"House Code\",\n        placeholderTextColor: \"#white\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            houseCode: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          return alert(\"registered!\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.textReg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Register\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/julialiu/Development/Julia Workspace/crib/crib-app/screens/RegisterScreen.tsx"],"names":["React","Text","View","styles","TextInput","App","state","name","email","password","houseCode","container","title","input","inputText","text","setState","button","registerButton","alert","textReg","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableOpacity, \n  Dimensions,\n  StyleSheet,\n  Button,\n  StatusBar,\n  Image\n} from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport StyledButton from '../components/StyledButton'\nimport styles from '../styles/landing';\nimport Colors from '../constants/Colors'\nimport { TextInput } from 'react-native-gesture-handler';\n\n\nexport default class App extends React.Component{\n    state={\n        name:\"\",\n        email:\"\",\n        password:\"\",\n        houseCode:\"\",\n    }\n    render(){\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Register</Text>\n            <View style={styles.input}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Name\"\n                    placeholderTextColor=\"#white\"\n                    onChangeText={text => this.setState({name:text})}/>\n            </View>\n            <View style={styles.input}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"Email\"\n                    placeholderTextColor=\"#white\"\n                    onChangeText={text => this.setState({email:text})}/>\n            </View>\n            <View style={styles.input}>\n                <TextInput\n                    secureTextEntry\n                    style={styles.inputText}\n                    placeholder=\"Pasword\"\n                    placeholderTextColor=\"#white\"\n                    onChangeText={text => this.setState({password:text})}/>\n            </View>\n            <View style={styles.input}>\n                <TextInput\n                    style={styles.inputText}\n                    placeholder=\"House Code\"\n                    placeholderTextColor=\"#white\"\n                    onChangeText={text => this.setState({houseCode:text})}/>\n            </View>\n            <View style = {styles.button}>\n            <TouchableOpacity \n                style={styles.registerButton} \n                onPress={()=>alert(\"registered!\")}>          \n                <Text style = {styles.textReg}>Register</Text>\n            </TouchableOpacity>\n            </View>\n        </View>\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}