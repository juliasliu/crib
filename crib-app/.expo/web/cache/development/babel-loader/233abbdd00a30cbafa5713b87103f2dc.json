{"ast":null,"code":"var _jsxFileName = \"/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/StyledButton.tsx\";\nimport * as React from 'react';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from '../constants/Colors';\nexport default function StyledButton(_ref) {\n  var onPress = _ref.onPress,\n      title = _ref.title,\n      size = _ref.size,\n      color = _ref.color,\n      icon = _ref.icon,\n      style = _ref.style;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: onPress,\n    style: [styles.appButtonContainer, size === \"sm\" && {\n      paddingHorizontal: 16,\n      paddingVertical: 8\n    }, size === \"lg\" && {\n      paddingHorizontal: 32,\n      paddingVertical: 16\n    }, color === \"green\" && Colors.greenButton, color === \"orange\" && Colors.orangeButton, color === \"yellow\" && Colors.yellowButton, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, icon ? React.createElement(Icon, {\n    name: icon,\n    size: size === \"sm\" ? 12 : size === \"lg\" ? 16 : 14,\n    style: [styles.appButtonIcon, (color === \"green\" || color === \"orange\" || color === \"yellow\") && {\n      color: \"#fff\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }) : null, React.createElement(Text, {\n    style: [styles.appButtonText, size === \"sm\" && {\n      fontSize: 12\n    }, size === \"lg\" && {\n      fontSize: 16\n    }, (color === \"green\" || color === \"orange\" || color === \"yellow\") && {\n      color: \"#fff\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, title));\n}\nvar styles = StyleSheet.create({\n  appButtonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 0,\n    borderRadius: 10,\n    backgroundColor: Colors.veryLightGray,\n    shadowColor: Colors.lightGray,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 1,\n    shadowRadius: 0,\n    elevation: 8\n  },\n  appButtonIcon: {\n    paddingRight: 5\n  },\n  appButtonText: {\n    fontSize: 14,\n    color: Colors.darkGray,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"sources":["/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/StyledButton.tsx"],"names":["React","Icon","Colors","StyledButton","onPress","title","size","color","icon","style","styles","appButtonContainer","paddingHorizontal","paddingVertical","greenButton","orangeButton","yellowButton","appButtonIcon","appButtonText","fontSize","StyleSheet","create","display","flexDirection","justifyContent","alignItems","borderWidth","borderRadius","backgroundColor","veryLightGray","shadowColor","lightGray","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","paddingRight","darkGray","fontWeight","alignSelf","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Icon from '@expo/vector-icons/FontAwesome';\nimport { Ionicons } from '@expo/vector-icons';\nimport {\n  FlatList,\n  Image,\n  ImageBackground,\n  Linking,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n  Modal,\n} from 'react-native';\nimport Colors from '../constants/Colors';\n\nexport default function StyledButton({ onPress, title, size, color, icon, style }) {\n  return (\n    <TouchableOpacity\n    activeOpacity={0.8}\n    onPress={onPress}\n    style={[\n      styles.appButtonContainer,\n      size === \"sm\" && {\n        paddingHorizontal: 16,\n        paddingVertical: 8,\n      },\n      size === \"lg\" && {\n        paddingHorizontal: 32,\n        paddingVertical: 16,\n      },\n      color === \"green\" && Colors.greenButton,\n      color === \"orange\" && Colors.orangeButton,\n      color === \"yellow\" && Colors.yellowButton,\n      style\n    ]}>\n    {\n      icon ? <Icon name={icon}\n      size={ size === \"sm\" ? 12 : size === \"lg\" ? 16 :  14 }\n      style={[\n        styles.appButtonIcon,\n        (color === \"green\" || color === \"orange\" || color === \"yellow\" ) && {\n          color: \"#fff\",\n        },\n      ]}>\n        </Icon> : null\n    }\n      <Text style={[\n        styles.appButtonText,\n        size === \"sm\" && { fontSize: 12 },\n        size === \"lg\" && { fontSize: 16 },\n        (color === \"green\" || color === \"orange\" || color === \"yellow\" ) && {\n          color: \"#fff\",\n        },\n      ]}>\n      {title}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  // ...\n  appButtonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    display: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderWidth: 0,\n\t\tborderRadius: 10,\n    backgroundColor: Colors.veryLightGray,\n\t\tshadowColor: Colors.lightGray,\n\t\tshadowOffset: {\n\t\t\twidth: 0,\n\t\t\theight: 5,\n\t\t},\n\t\tshadowOpacity: 1,\n\t\tshadowRadius: 0,\n    elevation: 8,\n  },\n  appButtonIcon: {\n    paddingRight: 5,\n  },\n  appButtonText: {\n    fontSize: 14,\n    color: Colors.darkGray,\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}