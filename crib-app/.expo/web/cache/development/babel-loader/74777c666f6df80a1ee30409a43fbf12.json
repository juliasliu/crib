{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/HomeButton.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Colors from '../constants/Colors';\nimport Icon from '@expo/vector-icons/FontAwesome';\nvar SIZE = 80;\nimport mainStyles from '../styles/main';\n\nvar HomeButton = function (_Component) {\n  _inherits(HomeButton, _Component);\n\n  var _super = _createSuper(HomeButton);\n\n  function HomeButton() {\n    var _this;\n\n    _classCallCheck(this, HomeButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.mode = new Animated.Value(0);\n\n    _this.toggleView = function () {\n      Animated.timing(_this.mode, {\n        toValue: _this.mode._value === 0 ? 1 : 0,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var firstX = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [20, -40]\n      });\n      var firstY = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, -30]\n      });\n      var secondX = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [20, 20]\n      });\n      var secondY = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, -55]\n      });\n      var thirdX = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [20, 80]\n      });\n      var thirdY = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, -30]\n      });\n      var opacity = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 1]\n      });\n      var rotation = this.mode.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '45deg']\n      });\n      return React.createElement(View, {\n        style: {\n          position: 'absolute',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: firstX,\n          top: firstY,\n          opacity: opacity\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"Home\");\n        },\n        style: [mainStyles.homeButton, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: SIZE / 2,\n          height: SIZE / 2,\n          borderRadius: SIZE / 4,\n          backgroundColor: Colors.green\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"home\",\n        size: 20,\n        color: \"#F8F8F8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }))), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: secondX,\n          top: secondY,\n          opacity: opacity\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {},\n        style: [mainStyles.homeButton, {\n          position: 'absolute',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: SIZE / 2,\n          height: SIZE / 2,\n          borderRadius: SIZE / 4,\n          backgroundColor: Colors.green\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"camera\",\n        size: 20,\n        color: \"#F8F8F8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }))), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          left: thirdX,\n          top: thirdY,\n          opacity: opacity\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {},\n        style: [mainStyles.homeButton, {\n          position: 'absolute',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: SIZE / 2,\n          height: SIZE / 2,\n          borderRadius: SIZE / 4,\n          backgroundColor: Colors.green\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"plus\",\n        size: 20,\n        color: \"#F8F8F8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableHighlight, {\n        onPress: this.toggleView,\n        underlayColor: Colors.green,\n        style: [mainStyles.homeButton, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: SIZE,\n          height: SIZE,\n          borderRadius: SIZE / 2\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: [{\n            rotate: rotation\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"home\",\n        size: 24,\n        color: \"#F8F8F8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return HomeButton;\n}(Component);\n\nexport default HomeButton;","map":{"version":3,"sources":["/Users/julialiu/Development/Julia Workspace/crib/crib-app/components/HomeButton.tsx"],"names":["React","Component","Colors","Icon","SIZE","mainStyles","HomeButton","mode","Animated","Value","toggleView","timing","toValue","_value","duration","useNativeDriver","start","firstX","interpolate","inputRange","outputRange","firstY","secondX","secondY","thirdX","thirdY","opacity","rotation","position","alignItems","left","top","props","navigation","navigate","homeButton","justifyContent","width","height","borderRadius","backgroundColor","green","transform","rotate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Animated, TouchableHighlight, View} from \"react-native\";\nimport Colors from '../constants/Colors';\nimport Icon from '@expo/vector-icons/FontAwesome';\nconst SIZE = 80;\nimport mainStyles from '../styles/main';\n\nclass HomeButton extends Component {\n    mode = new Animated.Value(0);\n    toggleView = () => {\n        Animated.timing(this.mode, {\n            toValue: this.mode._value === 0 ? 1 : 0,\n            duration: 300,\n            useNativeDriver: false,\n        }).start();\n    };\n    render() {\n        const firstX = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [20, -40]\n        });\n        const firstY = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -30]\n        });\n        const secondX = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [20, 20]\n        });\n        const secondY = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -55]\n        });\n        const thirdX = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [20, 80]\n        });\n        const thirdY = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, -30]\n        });\n        const opacity = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 1]\n        });\n        const rotation = this.mode.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '45deg']\n        });\n        return (\n            <View style={{\n                position: 'absolute',\n                alignItems: 'center'\n            }}>\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: firstX,\n                    top: firstY,\n                    opacity\n                }}>\n                    <TouchableHighlight\n                        onPress={() => {\n                          this.props.navigation.navigate(\"Home\");\n                        }}\n                        style={[mainStyles.homeButton, {\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: SIZE / 2,\n                            height: SIZE / 2,\n                            borderRadius: SIZE / 4,\n                            backgroundColor: Colors.green\n                        }]}\n                    >\n                        <Icon name=\"home\" size={20} color=\"#F8F8F8\"/>\n                    </TouchableHighlight>\n                </Animated.View>\n\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: secondX,\n                    top: secondY,\n                    opacity\n                }}>\n                    <TouchableHighlight\n                        onPress={() => {\n                        }}\n                        style={[mainStyles.homeButton, {\n                            position: 'absolute',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: SIZE / 2,\n                            height: SIZE / 2,\n                            borderRadius: SIZE / 4,\n                            backgroundColor: Colors.green\n                        }]}\n                    >\n                        <Icon name=\"camera\" size={20} color=\"#F8F8F8\"/>\n                    </TouchableHighlight>\n                </Animated.View>\n\n                <Animated.View style={{\n                    position: 'absolute',\n                    left: thirdX,\n                    top: thirdY,\n                    opacity\n                }}>\n                    <TouchableHighlight\n                        onPress={() => {\n                        }}\n                        style={[mainStyles.homeButton, {\n                            position: 'absolute',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: SIZE / 2,\n                            height: SIZE / 2,\n                            borderRadius: SIZE / 4,\n                            backgroundColor: Colors.green\n                        }]}\n                    >\n                        <Icon name=\"plus\" size={20} color=\"#F8F8F8\"/>\n                    </TouchableHighlight>\n                </Animated.View>\n\n                <TouchableHighlight\n                    onPress={this.toggleView}\n                    underlayColor={Colors.green}\n                    style={[mainStyles.homeButton, {\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        width: SIZE,\n                        height: SIZE,\n                        borderRadius: SIZE / 2,\n                    }]}\n                >\n                    <Animated.View style={{\n                        transform: [\n                            {rotate: rotation}\n                        ]\n                    }}>\n                        <Icon name=\"home\" size={24} color=\"#F8F8F8\"/>\n                    </Animated.View>\n                </TouchableHighlight>\n            </View>\n        );\n    }\n}\nexport default HomeButton;\n"]},"metadata":{},"sourceType":"module"}